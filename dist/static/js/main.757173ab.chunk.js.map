{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moments","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","moment","createdAt","calendar","ProjectList","projects","concat","projects_ProjectSummary","Dashboard","_this$props","this","react","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","firstname","lastname","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","authorID","Date","App","layout_Navbar","exact","path","component","ProjectDetails","SignUp","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.757173ab.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { signOut } from \"../../store/actions/authActions\";\n\nconst SignedInLinks = props => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">New Project</NavLink>\n      </li>\n      <li>\n        <a onClick={props.signOut}>Log Out</a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n          {props.profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOut: () => dispatch(signOut())\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignedInLinks);\n","export const signIn = credentials => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN_SUCCESS\" });\n      })\n      .catch(err => {\n        dispatch({ type: \"LOGIN_ERROR\", err });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\n      });\n  };\n};\n\nexport const signUp = newUser => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then(resp => {\n        return firestore\n          .collection(\"users\")\n          .doc(resp.user.uid)\n          .set({\n            firstname: newUser.firstname,\n            lastname: newUser.lastname,\n            initials: newUser.firstname[0] + newUser.lastname[0]\n          });\n      })\n      .then(() => {\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\n      })\n      .catch(err => {\n        dispatch({ type: \"SIGNUP_ERROR\", err });\n      });\n  };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Signup</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Login</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\n\nconst Navbar = props => {\n  const { auth, profile } = props;\n  const links = auth.uid ? (\n    <SignedInLinks profile={profile} />\n  ) : (\n    <SignedOutLinks />\n  );\n  return (\n    <div>\n      <nav className=\"nav-wrapper grey darken-3\">\n        <div className=\"container\">\n          <Link to=\"/\" className=\"brand-logo\">\n            Dashboard\n          </Link>\n          {links}\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\nimport moments from \"moment\";\n\nconst Notifications = props => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            {notifications &&\n              notifications.map(item => {\n                return (\n                  <li key={item.id}>\n                    <span className=\"pink-text\">{item.user} </span>\n                    <span>{item.content} </span>\n                    <span className=\"grey-text note-date\">\n                      {moments(item.time.toDate()).fromNow()}\n                    </span>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst ProjectSummary = ({ project }) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>\n          {project.authorFirstName} {project.authorLastName}\n        </p>\n        <p className=\"grey-text\">\n          {moment(project.createdAt.toDate()).calendar()}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ProjectSummary from \"./ProjectSummary\";\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className=\"project-list section\">\n      {projects &&\n        projects.map(project => {\n          return (\n            <Link to={`/project/${project.id}`} key={project.id}>\n              <ProjectSummary project={project} />\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\n\nclass Dashboard extends Component {\n  render() {\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n    return (\n      <Fragment>\n        <div className=\"dashboard container\">\n          <div className=\"row\">\n            <div className=\"col s12 m6\">\n              <ProjectList projects={projects} />\n            </div>\n            <div className=\"col s12 m5 offset-m1\">\n              <Notifications notifications={notifications} />\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\n  ])\n)(Dashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst ProjectDetails = props => {\n  const { project, auth } = props;\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>\n              {project.authorFirstName} {project.authorLastName}\n            </div>\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"projects\" }])\n)(ProjectDetails);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { signIn } from \"../../store/actions/authActions\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  };\n\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />;\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n          </div>\n          <div className=\"red-text center\">\n            {authError ? <p>{authError}</p> : null}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: creds => dispatch(signIn(creds))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignIn);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { signUp } from \"../../store/actions/authActions\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    firstname: \"\",\n    lastname: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  };\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />;\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstname\">First Name</label>\n            <input type=\"text\" id=\"firstname\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastname\">Last Name</label>\n            <input type=\"text\" id=\"lastname\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n          </div>\n          <div className=\"red-text center\">\n            {authError ? <p>{authError}</p> : null}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: newUser => dispatch(signUp(newUser))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignIn);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { createProject } from \"../../store/actions/projectActions\";\n\nclass CreateProject extends Component {\n  state = {\n    title: \"\",\n    content: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.createProject(this.state);\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Create new project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Content</label>\n            <textarea\n              className=\"materialize-textarea\"\n              id=\"content\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: project => dispatch(createProject(project))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateProject);\n","export const createProject = project => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore\n      .collection(\"projects\")\n      .add({\n        ...project,\n        authorFirstName: profile.firstname,\n        authorLastName: profile.lastname,\n        authorID: authorId,\n        createdAt: new Date()\n      })\n      .then(() => {\n        dispatch({ type: \"CREATE_PROJECT\", project });\n      })\n      .catch(err => {\n        dispatch({ type: \"CREATE_PROJECT_ERR\", err });\n      });\n  };\n};\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport Navbar from \"../src/components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      console.log(\"Login error!\");\n      return {\n        ...state,\n        authError: \"Login failed\"\n      };\n    case \"LOGIN_SUCCESS\":\n      console.log(\"Login success!\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNOUT_SUCCESS\":\n      console.log(\"Signed out\");\n      return state;\n    case \"SIGNUP_SUCCESS\":\n      console.log(\"signup success\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNUP_ERROR\":\n      console.log(\"signup error\", action.err);\n      return {\n        ...state,\n        authError: action.err.message\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n  projects: [\n    { id: \"1\", title: \"hello\", content: \"blah blah\" },\n    { id: \"2\", title: \"hello\", content: \"blah blah\" },\n    { id: \"3\", title: \"hello\", content: \"blah blah\" }\n  ]\n};\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_PROJECT\":\n      console.log(\"created project\", action.project);\n      return state;\n    case \"CREATE_PROJECT_ERR\":\n      console.log(\"create project error\", action.err);\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;\n","import { combineReducers } from \"redux\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nimport authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer //syncs auth status on firebase with redux app on the state and put on this firebase obj on the state\n});\n\nexport default rootReducer;\n","// Your web app's Firebase configuration\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAQqJT47Aal6kk1wl9QDs5KNQUIGDObleQ\",\n  authDomain: \"first-firebase-app-43db8.firebaseapp.com\",\n  databaseURL: \"https://first-firebase-app-43db8.firebaseio.com\",\n  projectId: \"first-firebase-app-43db8\",\n  storageBucket: \"first-firebase-app-43db8.appspot.com\",\n  messagingSenderId: \"842991307025\",\n  appId: \"1:842991307025:web:40b3459345776117\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {\n      useFirestoreForProfile: true,\n      userProfile: \"users\",\n      attachAuthIsReady: true\n    })\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}